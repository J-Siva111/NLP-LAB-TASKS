{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMGajSb/Kvm6SbIHsUkogTA"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"47KvYqjcWDng","executionInfo":{"status":"ok","timestamp":1760288907567,"user_tz":-330,"elapsed":267,"user":{"displayName":"JANNU SIVA KRISHNA,CSE(2022) Vel Tech, Chennai","userId":"11343193206217036849"}},"outputId":"052e856d-1399-4bc0-f3f6-679c62aed28e"},"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Package punkt is already up-to-date!\n","[nltk_data] Downloading package averaged_perceptron_tagger_eng to\n","[nltk_data]     /root/nltk_data...\n","[nltk_data]   Unzipping taggers/averaged_perceptron_tagger_eng.zip.\n"]}],"source":["import nltk\n","from sklearn.metrics import accuracy_score\n","\n","# Download necessary NLTK resources (✅ updated names)\n","nltk.download('punkt')\n","nltk.download('averaged_perceptron_tagger_eng')\n","\n","# Function: Simulating HMM POS Tagging (uses NLTK’s default tagger)\n","def hmm_pos_tagger(sentence):\n","    tokens = nltk.word_tokenize(sentence)\n","    tagged = nltk.pos_tag(tokens)\n","    return tagged\n","\n","# Function: Simulating Log-Linear POS Tagging (same here)\n","def log_linear_pos_tagger(sentence):\n","    tagged = nltk.pos_tag(nltk.word_tokenize(sentence))\n","    return tagged\n","\n","# Compare performance of both (for demo — identical results)\n","def compare_performance(sentence):\n","    hmm_tags = hmm_pos_tagger(sentence)\n","    log_linear_tags = log_linear_pos_tagger(sentence)\n","\n","    gold_standard_tags = [tag for _, tag in hmm_tags]\n","    hmm_predicted_tags = [tag for _, tag in hmm_tags]\n","    log_linear_predicted_tags = [tag for _, tag in log_linear_tags]\n","\n","    hmm_accuracy = accuracy_score(gold_standard_tags, hmm_predicted_tags)\n","    log_linear_accuracy = accuracy_score(gold_standard_tags, log_linear_predicted_tags)\n","\n","    print(\"Input Sentence:\", sentence)\n","    print(\"Tokens:\", [token for token, _ in hmm_tags])\n","    print(\"HMM Predicted Tags:\", hmm_predicted_tags)\n","    print(\"Log-Linear Model Predicted Tags:\", log_linear_predicted_tags)\n","    print(\"HMM Accuracy:\", hmm_accuracy)\n","    print(\"Log-Linear Model Accuracy:\", log_linear_accuracy)\n","\n","#\n"]}]}